---
- hosts: tag_Name_iuberdata
  gather_facts: True
  user: ec2-user
  sudo: yes
  tasks:
    - name: install spark jars
      script: spark-jars.sh
    - debug: var=script.stdout
    - debug: var=script.stderr
    - name: copy iuberdata to init.d
      copy: src=iuberdata dest=/etc/init.d/iuberdata
    - name: copy local iuberdata
      copy: src=../iuberdata_zeppelin/target/scala-2.11/eleflow.uberdata.IUberdata-Zeppelin-0.2.0.jar dest=/tmp/eleflow.uberdata.IUberdata-Zeppelin-0.2.0.jar
      ignore_errors: yes
    - name: copy local iuberdata_addon_zeppelin
      copy: src=../iuberdata_addon_zeppelin/target/scala-2.11/iuberdata_addon_zeppelin-assembly-0.2.0.jar dest=/tmp/iuberdata_addon_zeppelin-assembly-0.2.0.jar
      ignore_errors: yes
    - name: copy local xgboost
      copy: src=../../xgboost/jvm-packages/xgboost4j/target/xgboost4j-0.7-jar-with-dependencies.jar dest=/tmp/xgboost4j-0.7-jar-with-dependencies.jar
      ignore_errors: yes
    - name: copy local xgboost-spark
      copy: src=../../xgboost/jvm-packages/xgboost4j-spark/target/xgboost4j-spark-0.7-jar-with-dependencies.jar dest=/tmp/xgboost4j-spark-0.7-jar-with-dependencies.jar
      ignore_errors: yes
    - name: copy local sparkts
      copy: src=../../spark-timeseries/target/sparkts-0.4.1-jar-with-dependencies.jar  dest=/tmp/sparkts-0.4.1-jar-with-dependencies.jar
      ignore_errors: yes
    - name: copy zeppelin-site.xml
      copy: src=zeppelin-site.xml dest=/tmp/zeppelin-site.xml
    - name: copy interpreter.sh
      copy: src=interpreter.sh dest=/tmp/interpreter.sh
    - name: copy notebook.zip
      copy: src=notebook.zip dest=/tmp/notebook.zip
    - name: stop iuberdata
      service: name=iuberdata state=stopped enabled=yes
      ignore_errors: yes
    - name: zeppelin and iuberdata
      script: iuberdata.sh
    - debug: var=script.stdout
    - debug: var=script.stderr
    - name: start iuberdata
      service: name=iuberdata state=started enabled=yes
    - debug: var=script.stdout
    - debug: var=script.stderr
    - name: install nginx
      script: nginx.sh
    - debug: var=script.stdout
    - debug: var=script.stderr
    - name: copy nginx conf
      copy: src=nginx.conf dest=/etc/nginx/nginx.conf
      tags:
        - nginx
    - debug: var=script.stdout
    - debug: var=script.stderr
    - name:  nginx on startup
      service: name=nginx state=started enabled=on
      tags:
        - nginx
        - nginx-conf
    - debug: var=script.stdout
    - debug: var=script.stderr
